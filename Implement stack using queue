/**************************Implement Stack using queue******************************/

#include <bits/stdc++.h>
using namespace std;

class Stack
{
    queue<int> q;
    
    public:
       
        void push(int x)
        {
           int s = q.size();
           q.push(x);
           for(int i=0; i<s-1; i++)
           {
               q.push(q.front());
               q.pop();
           }
        }
        
        int pop()
        {
            int n = q.front();
            q.pop();
            return n;
        }
        
        int size()
        {
            return q.size();
        }
        
        int top()
        {
            return q.front();
        }
};

int main()
{
    Stack s;
    s.push(3);
    s.push(2);
    s.push(4);
    s.push(1);
    
    cout<<"Peak of stack before deletion"<<" "<<s.top()<<endl;
    cout<<"Size before deletion"<<" "<<s.size()<<endl;
    cout<<"First element to be deleted"<<" "<<s.pop()<<endl;
    cout<<"Peak of stack after deletion"<<" "<<s.top()<<endl;
    cout<<"Size after deletion"<<" "<<s.size()<<endl;

    return 0;
}
